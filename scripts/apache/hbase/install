#!/usr/bin/env bash
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Install Apache HBase.
#
# Call with the following arguments
# -c <cloud provider>
# -u <hbase tarball url>

set -x
set -e

# get parameters
CLOUD_PROVIDER=
HBASE_TAR_URL=
while getopts "c:u:" OPTION; do
  case $OPTION in
  c)
    CLOUD_PROVIDER="$OPTARG"
    ;;
  u)
    HBASE_TAR_URL="$OPTARG"
    ;;
  esac
done

# assign default URL if no other given (optional)
HBASE_TAR_URL=${HBASE_TAR_URL:-http://archive.apache.org/dist/hbase/hbase-0.90.0/hbase-0.90.0.tar.gz}
# derive details from the URL
HBASE_TAR_FILE=${HBASE_TAR_URL##*/}
HBASE_TAR_MD5_FILE=$HBASE_TAR_FILE.md5
# extract "version" or the name of the directory contained in the tarball,
# but since hbase has used different namings use the directory instead.
HBASE_VERSION=${HBASE_TAR_URL%/*.tar.gz}
HBASE_VERSION=${HBASE_VERSION##*/}
# simple check that we have a proper URL or default to use filename
if [[ "${HBASE_VERSION:0:5}" != "hbase" ]]; then
  HBASE_VERSION=${HBASE_TAR_FILE%.tar.gz}
fi
HBASE_HOME=/usr/local/$HBASE_VERSION
HBASE_CONF_DIR=$HBASE_HOME/conf

# update the debian or redhat repos
function update_repo() {
  if which dpkg &> /dev/null; then
    sudo apt-get update
  elif which rpm &> /dev/null; then
    yum update -y yum
  fi
}

# install a list of packages on debian or redhat
function install_packages() {
  if which dpkg &> /dev/null; then
    apt-get update
    apt-get -y install $@
  elif which rpm &> /dev/null; then
    yum install -y $@
  else
    echo "No package manager found."
  fi
}

# install hbase
function install_hbase() {
  if ! id hadoop &> /dev/null; then
    useradd hadoop
  fi

  # up file-max
  sysctl -w fs.file-max=65535
  # up ulimits
  echo "root soft nofile 65535" >> /etc/security/limits.conf
  echo "root hard nofile 65535" >> /etc/security/limits.conf
  ulimit -n 65535
  # up epoll limits; ok if this fails, only valid for kernels 2.6.27+
  set +e
  sysctl -w fs.epoll.max_user_instances=4096 > /dev/null 2>&1
  set -e
  # if there is no hosts file then provide a minimal one
  [ ! -f /etc/hosts ] && echo "127.0.0.1 localhost" > /etc/hosts

  # Reformat sdb as xfs
  #umount /mnt
  #mkfs.xfs -f /dev/sdb
  #mount -o noatime /dev/sdb /mnt
  # Probe for additional instance volumes
  # /dev/sdb as /mnt is always set up by base image
  #DFS_NAME_DIR="/mnt/hadoop/dfs/name"
  #DFS_DATA_DIR="/mnt/hadoop/dfs/data"
  #i=2
  #for d in c d e f g h i j k l m n o p q r s t u v w x y z; do
  # m="/mnt${i}"
  # mkdir -p $m
  # mkfs.xfs -f /dev/sd${d}
  # if [ $? -eq 0 ] ; then
  #  mount -o noatime /dev/sd${d} $m > /dev/null 2>&1
  #  if [ $i -lt 3 ] ; then # no more than two namedirs
  #   DFS_NAME_DIR="${DFS_NAME_DIR},${m}/hadoop/dfs/name"
  #  fi
  #  DFS_DATA_DIR="${DFS_DATA_DIR},${m}/hadoop/dfs/data"
  #  i=$(( i + 1 ))
  # fi
  #done

  # install HBase tarball
  curl="curl --retry 3 --silent --show-error --fail"
  for i in `seq 1 3`;
  do
    $curl -O $HBASE_TAR_URL
    $curl -O $HBASE_TAR_URL.md5
    if md5sum -c $HBASE_TAR_MD5_FILE; then
      break;
    else
      rm -f $HBASE_TAR_FILE $HBASE_TAR_MD5_FILE
    fi
  done

  if [ ! -e $HBASE_TAR_FILE ]; then
    echo "Failed to download $HBASE_TAR_URL. Aborting."
    exit 1
  fi

  tar zxf $HBASE_TAR_FILE -C /usr/local
  rm -f $HBASE_TAR_FILE $HBASE_TAR_MD5_FILE

  echo "export HBASE_HOME=$HBASE_HOME" >> ~root/.bashrc
  echo 'export PATH=$JAVA_HOME/bin:$HBASE_HOME/bin:$PATH' >> ~root/.bashrc
}

update_repo
install_hbase
